class Solution {
private:
    bool compare(string& cur, vector<int>& vis) {
        vector<int> self(26, 0);
        for(int i = 0; i < cur.size(); i++) {
            if(self[cur[i] - 'a'] == 1)
                return false;
            self[cur[i] - 'a'] = 1;
        }
        for(int i = 0; i < cur.size(); i++)
            if(vis[cur[i] - 'a'] == 1)
                return false;
        return true;
    }
    int help(int i, vector<string>& arr, vector<int>& selected, int len) {
        if(i == arr.size())
            return len;
        string cur = arr[i];
        if(compare(cur, selected) == false)
            return help(i+1, arr, selected, len);
        else {
            for(int j = 0; j < cur.size(); j++)
                selected[cur[j]-'a'] = 1;
            len += cur.size();
            int op1 = help(i+1, arr, selected, len);
            for(int j = 0; j < cur.size(); j++)
                selected[cur[j]-'a'] = 0;
            len -= cur.size();
            int op2 = help(i+1, arr, selected, len);
            return max(op1, op2);
        }
    }
public:
    int maxLength(vector<string>& arr) {
        vector<int> selected(26, 0);
        return help(0, arr, selected, 0);
    }
};
