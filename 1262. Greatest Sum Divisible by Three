class Solution {
private:
    int solve(vector<int>& nums, int n, int i, int sum, vector<vector<int>>& dp) {
        if(i == n)
            return sum == 0 ? 0 : -1;
        if(dp[i][sum] != -1)
            return dp[i][sum];
        int a = solve(nums, n, i+1, (sum + nums[i]) % 3, dp);
        if(a != -1)
            a += nums[i];
        int b = solve(nums, n, i+1, sum, dp);
        return dp[i][sum] = max(a, b);
    }
public:
    int maxSumDivThree(vector<int>& nums) {
        int ans = 0, sum = 0, n = nums.size();
        vector<vector<int>> dp(n, vector<int>(4, -1));
        if(n == 1)
            return nums[0] % 3 == 0 ? nums[0] : 0;
        ans = solve(nums, n, 0, sum, dp);
        return ans == -1 ? 0 : ans;
    }
};
