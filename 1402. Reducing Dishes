// C++ CODE

class Solution {
public:
    int maxSatisfaction(vector<int>& satisfaction) {
        int n = satisfaction.size();
        sort(satisfaction.begin(), satisfaction.end());
        int ans = 0, total = 0;
        for(int i = n-1; i >= 0 && satisfaction[i] > -total; i--) {
            total += satisfaction[i];
            ans += total;
        }
        return ans;
    }
};




// PYTHON3 CODE

class Solution:
    def maxSatisfaction(self, satisfaction: List[int]) -> int:
        n = len(satisfaction)
        satisfaction.sort()
        ans, total, i = 0, 0, n-1
        while i >= 0 and satisfaction[i] > -total:
            total += satisfaction.pop()
            ans += total
            i -= 1
        return ans
        
