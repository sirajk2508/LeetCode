// TC : O(N)

class Solution {
public:
    bool checkInclusion(string s1, string s2) {
        int n = s1.length(), m = s2.length();
        if( n > m)
            return false;
        vector<int> s1count(26, 0), s2count(26, 0);
        for(int i = 0; i < n; i++) {
            s1count[s1[i] - 'a']++;
            s2count[s2[i] - 'a']++;
        }
        int matches = 0;
        for(int i = 0; i < 26; i++) {
            if(s1count[i] == s2count[i])
                matches += 1;
            else matches += 0;
        }
        int l = 0;
        for(int r = n; r < m; r++) {
            if(matches == 26)
                return true;
            int index = s2[r] - 'a';
            s2count[index] += 1;
            if(s1count[index] == s2count[index])
                matches += 1;
            else if(s1count[index] + 1 == s2count[index])
                matches -= 1;
            index = s2[l] - 'a';
            s2count[index] -= 1;
            if(s1count[index] == s2count[index])
                matches += 1;
            else if(s1count[index] - 1 == s2count[index])
                matches -= 1;
            l += 1;
        }
        return matches == 26;
    }
};



// PYTHON3 Solution

class Solution:
    def checkInclusion(self, s1: str, s2: str) -> bool:
        n, m = len(s1), len(s2)
        if n > m:
            return False
        s1Count, s2Count = [0] * 26, [0] * 26
        for i in range(n):
            s1Count[ord(s1[i]) - ord('a')] += 1
            s2Count[ord(s2[i]) - ord('a')] += 1
        matches = 0
        for i in range(26):
            matches += (1 if s1Count[i] == s2Count[i] else 0)
        l = 0
        for r in range(n, m):
            if matches == 26:
                return True
            index = ord(s2[r]) - ord('a')
            s2Count[index] += 1
            if s1Count[index] == s2Count[index]:
                matches += 1
            elif s1Count[index] + 1 == s2Count[index]:
                matches -= 1
            
            index = ord(s2[l]) - ord('a')
            s2Count[index] -= 1
            if s1Count[index] == s2Count[index]:
                matches += 1
            elif s1Count[index] - 1 == s2Count[index]:
                matches -= 1
            l += 1
        return matches == 26
