// Brute Force : RECURSION

class Solution {
private:
    long long int solve(vector<int>& nums, int cur, int dest) {
        if(cur >= dest)
            return 0;
        long long int ans = INT_MAX;
        for(int i = 1; i <= nums[cur]; i++)
            ans = min(ans, 1+ solve(nums, cur + i, dest));
        return ans;
    }
public:
    int jump(vector<int>& nums) {
        return solve(nums, 0, nums.size()-1);
    }
};



// MEMOIZATION

class Solution {
private:
    long long int solve(vector<int>& nums, int cur, int dest, vector<int>& dp) {
        if(cur >= dest)
            return 0;
        long long int ans = INT_MAX;
        if(dp[cur] != -1)
            return dp[cur];
        for(int i = 1; i <= nums[cur]; i++)
            ans = min(ans, 1 + solve(nums, cur + i, dest, dp));
        return dp[cur] = ans;
    }
public:
    int jump(vector<int>& nums) {
        int n = nums.size();
        vector<int> dp(n+1, -1);
        return solve(nums, 0, n-1, dp);
    }
};



// TABULATION

class Solution {
public:
    int jump(vector<int>& nums) {
        int n = nums.size();
        if(n == 1)
            return 0;
        int ans = 0, cur = 0, temp = 0;
        for(int i = 0; i < n-1; i++) {
            temp = max(temp, nums[i] + i);
            if(i == cur) {
                ans++;
                cur = temp;
            }
        }
        return cur < n-1 ? -1 : ans;
    }
};





// PYTHON CODE

class Solution(object):
    def jump(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        if len(nums) == 1:
            return 0
        ans = cur = temp = 0
        for i in range(0, len(nums)-1):
            temp = max(temp, nums[i] + i)
            if i == cur:
                ans += 1
                cur = temp
        if cur < len(nums)-1:
            return -1
        return ans
        
        
// PYTHON3 CODE

class Solution:
    def jump(self, nums: List[int]) -> int:
        n = len(nums)
        if n == 1:
            return 0
        ans = temp = cur = 0
        for i in range(0, n-1):
            temp = max(temp, nums[i] + i)
            if i == cur:
                ans += 1
                cur = temp
        return -1 if cur < n-1 else ans
