class Solution {
private:
    bool check(vector<int>& stone1, vector<int>& stone2) {
        if(stone1[0] == stone2[0] || stone1[1] == stone2[1])
            return true;
        return false;
    }
    
    void dfs(vector<vector<int>>& stones, vector<int>& vis, int ind) {
        vis[ind] = 1;
        for(int i = 0; i < stones.size(); i++)
            if(!vis[i] && check(stones[ind], stones[i]))
                dfs(stones, vis, i);
    }
public:
    int removeStones(vector<vector<int>>& stones) {
        int n = stones.size();
        int components = 0;
        vector<int> vis(n, 0);
        for(int i = 0; i < n; i++) {
            if(!vis[i]) {
                components++;
                dfs(stones, vis, i);
            }
        }
        return n - components;
    }
};
