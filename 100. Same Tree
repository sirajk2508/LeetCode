// RECURSIVE SOLUTION

class Solution {
public:
    bool isSameTree(TreeNode* p, TreeNode* q) {
        if(!p && !q)
            return true;
        if(!p || !q || p->val != q->val)
            return false;
        return isSameTree(p->left, q->left) && isSameTree(p->right, q->right);
    }
};



//ITERATIVE SOLUTION

class Solution {
public:
    bool isSameTree(TreeNode* p, TreeNode* q) {
        queue<TreeNode*> store;
        store.push(p);
        store.push(q);
        while(!store.empty()) {
            TreeNode* q1 = store.front();
            store.pop();
            TreeNode* q2 = store.front();
            store.pop();
            if(!q1 && !q2)
                continue;
            else if(!q1 || !q2)
                return false;
            else if(q1->val != q2->val)
                return false;
            store.push(q1->left);
            store.push(q2->left);
            store.push(q1->right);
            store.push(q2->right);
        }
        return true;
    }
};
