// Brute Force 

class Solution {
public:
    vector<vector<int>> minimumAbsDifference(vector<int>& arr) {
        sort(arr.begin(), arr.end());
        int miniDiff = INT_MAX;
        int n = arr.size();
        vector<vector<int>> ans;
        for(int i = 0; i < n-1; i++) {
            int diff = abs(arr[i] - arr[i+1]);
            miniDiff = min(miniDiff, diff);
        }
        for(int i = 0; i < n-1; i++) {
            int diff = abs(arr[i] - arr[i+1]);
            cout << miniDiff << " ";
            if(diff == miniDiff)
                ans.push_back({arr[i], arr[i+1]});
        }
        cout << endl;
        return ans;
    }
};


// Optimized Solution

class Solution {
public:
    vector<vector<int>> minimumAbsDifference(vector<int>& arr) {
        sort(arr.begin(), arr.end());
        vector<vector<int>> ans;
        int minDiff = INT_MAX, curDiff;
        for(int i = 0; i < arr.size()-1; i++) {
            curDiff = abs(arr[i] - arr[i+1]);
            if(curDiff == minDiff)
                ans.push_back({arr[i], arr[i+1]});
            else if(curDiff < minDiff) {
                minDiff = curDiff;
                ans = {{arr[i], arr[i+1]}};
            }
        }
        return ans;
    }
};
