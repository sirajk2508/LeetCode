class Solution {
public:
    vector<int> sortedSquares(vector<int>& nums) {
        int n = nums.size();
        for(int i = 0; i < n; i++)
            nums[i] *= nums[i];
        sort(nums.begin(), nums.end());
        return nums;
    }
};


// TWO POINTERS

class Solution {
public:
    vector<int> sortedSquares(vector<int>& nums) {
        int n = nums.size();
        int l = 0, r = n-1;
        vector<int> ans(n);
        for(int i = n-1; i >= 0; i--) {
            if(abs(nums[r]) > abs(nums[l]))
                ans[i] = nums[r] * nums[r--];
            else ans[i] = nums[l] * nums[l++];
        }
        return ans;
    }
};


// PYTHON3 CODE

class Solution:
    def sortedSquares(self, nums: List[int]) -> List[int]:
        n = len(nums)
        for i in range(n):
            nums[i] *= nums[i]
        nums.sort()
        return nums
