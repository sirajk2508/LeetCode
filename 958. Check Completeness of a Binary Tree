class Solution {
public:
    bool isCompleteTree(TreeNode* root) {
        queue<TreeNode*> q;
        q.push(root);
        while(!q.empty()) {
            TreeNode* node = q.front();
            q.pop();
            if(node != NULL) {
                q.push(node->left);
                q.push(node->right);
            }
            else {
                while(!q.empty()) {
                    TreeNode* n = q.front();
                    q.pop();
                    if(n)
                        return false;
                }
            }
        }
        return true;
    }
};




// PYTHON3 Solution

class Solution:
    def isCompleteTree(self, root: Optional[TreeNode]) -> bool:
        q = deque([root])
        while q:
            node = q.popleft()
            if node:
                q.append(node.left)
                q.append(node.right)
            else:
                while q:
                    if q.popleft():
                        return False
        return True
