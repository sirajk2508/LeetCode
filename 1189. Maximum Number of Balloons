class Solution {
public:
    int maxNumberOfBalloons(string text) {
        unordered_map<char, int> mpp;
        for(auto i : text)
            mpp[i]++;
        int count = min(mpp['b'], min(mpp['a'], min(mpp['l']/2, min(mpp['o']/2, mpp['n']))));
        return count;
    }
};




class Solution {
public:
    int maxNumberOfBalloons(string text) {
        unordered_map<char, int> mpp;
        for(auto i : text)
            mpp[i]++;
        int count = min({mpp['b'], mpp['a'], mpp['l']/2, mpp['o']/2, mpp['n']});
        return count;
    }
};


// OPTIMIZED SOLUTION

class Solution {
public:
    int maxNumberOfBalloons(string text) {
        int b = 0, a = 0, l = 0, o = 0, n = 0;
        for(auto ch : text) {
            switch (ch) {
                case 'a':
                    a++; break;
                case 'b':
                    b++; break;
                case 'l':
                    l++; break;
                case 'o':
                    o++; break;
                case 'n':
                    n++; break;
            }
        }
        return min({b, a, l/2, o/2, n});
    }
};
