class Solution {
private:
    TreeNode* solve(ListNode* start, ListNode* end) {
        if(start == end)
            return NULL;
        ListNode* slow = start;
        ListNode* fast = start;
        while(fast != end && fast->next != end) {
            slow = slow->next;
            fast = fast->next->next;
        }
        TreeNode* root = new TreeNode(slow->val);
        root->left = solve(start, slow);
        root->right = solve(slow->next, end);
        return root;
    }
public:
    TreeNode* sortedListToBST(ListNode* head) {
        if(!head)
            return NULL;
        return solve(head, NULL);
    }
};
