// SEQUENTIAL TRAVERSAL

class Solution {
public:
    int getMinDistance(vector<int>& nums, int target, int start) {
        int ans = INT_MAX;
        int n = nums.size();
        for(int i = 0; i < n; i++) {
            if(nums[i] == target) {
                ans = min(ans, abs(i - start));
            }
        }
        return ans;
    }
};



// TWO POINTERS

class Solution {
public:
    int getMinDistance(vector<int>& nums, int target, int start) {
        int i = start, n = nums.size(), j = start;
        while(i >= 0 or j <= n-1) {
            if(i >= 0 and nums[i] == target)
                break;
            if(j <= n-1 and nums[j] == target)
                break;
            i--;
            j++;
        }
        if(i >= 0 and nums[i] == target)
            return abs(i - start);
        return abs(j - start);
    }
};
