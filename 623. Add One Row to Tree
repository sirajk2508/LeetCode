class Solution {
private:
    TreeNode* preorder(TreeNode* root, int val, int depth) {
        if(!root)
            return nullptr;
        if(depth == 2) {
            TreeNode* lnode = new TreeNode(val);
            TreeNode* rnode = new TreeNode(val);
            lnode->left = root->left;
            rnode->right = root->right;
            root->left = lnode;
            root->right = rnode;
            return root;
        }
        root->left = preorder(root->left, val, depth - 1);
        root->right = preorder(root->right, val, depth - 1);
        return root;
    }
public:
    TreeNode* addOneRow(TreeNode* root, int val, int depth) {
        if(depth == 1) {
            TreeNode* node = new TreeNode(val);
            node->left = root;
            return node;
        }
        return preorder(root, val, depth);
    }
};
