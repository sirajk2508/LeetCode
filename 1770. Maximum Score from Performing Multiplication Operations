class Solution {
private:
    int dp[1000][1000];
    int solve(vector<int>& nums, vector<int>& multi, int ind, int l, int r) {
        if(ind == multi.size())
            return 0;
        if(dp[ind][l] != 1e9)
            return dp[ind][l];
        int s1 = (multi[ind]*nums[l]) + solve(nums, multi, ind+1, l+1, r);
        int s2 = (multi[ind]*nums[r]) + solve(nums, multi, ind+1, l, r-1);
        return dp[ind][l] = max(s1, s2);
    }
public:
    int maximumScore(vector<int>& nums, vector<int>& multipliers) {
        int n = nums.size(), m = multipliers.size();
        for(int i = 0; i < 1000; i++)
            for(int j = 0; j < 1000; j++)
                dp[i][j] = 1e9;
        return solve(nums, multipliers, 0, 0, n-1);
    }
};
