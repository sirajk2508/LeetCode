class Solution {
public:
    int closestMeetingNode(vector<int>& edges, int node1, int node2) {
        int n = edges.size();
        vector<int> dist1(n, -1);
        vector<int> dist2(n, -1);
        int dis = 1;
        while(node1 != -1) {
            if(dist1[node1] != -1)
                break;
            dist1[node1] += dis;
            node1 = edges[node1];
            dis++;
        }
        dis = 1;
        while(node2 != -1) {
            if(dist2[node2] != -1)
                break;
            dist2[node2] += dis;
            node2 = edges[node2];
            dis++;
        }
        int mini = INT_MAX;
        int ans = -1;
        for(int i = 0; i < n; i++) {
            if(dist1[i] != -1 && dist2[i] != -1) {
                if(mini > max(dist1[i], dist2[i])) {
                    mini = max(dist1[i], dist2[i]);
                    ans = i;
                }
            }
        }
        return ans;
    }
};
