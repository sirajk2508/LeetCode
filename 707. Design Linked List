// PYTHON3 Solution

class list:
    def __init__(self, val):
        self.val = val
        self.next = None
        self.prev = None

class MyLinkedList:

    def __init__(self):
        self.left = list(0)
        self.right = list(0)
        self.left.next = self.right
        self.right.prev = self.left

    def get(self, index: int) -> int:
        cur = self.left.next
        while cur and index > 0:
            cur = cur.next
            index -= 1
        if cur and cur != self.right and index == 0:
            return cur.val
        return -1

    def addAtHead(self, val: int) -> None:
        node, nxt, prv = list(val), self.left.next, self.left
        prv.next = node
        nxt.prev = node
        node.next = nxt
        node.prev = prv

    def addAtTail(self, val: int) -> None:
        node, nxt, prv = list(val), self.right, self.right.prev
        prv.next = node
        nxt.prev = node
        node.next = nxt
        node.prev = prv

    def addAtIndex(self, index: int, val: int) -> None:
        cur = self.left.next
        while cur and index > 0:
            cur = cur.next
            index -= 1
        if cur and index == 0:
            node, nxt, prv = list(val), cur, cur.prev
            prv.next = node
            nxt.prev = node
            node.next = nxt
            node.prev = prv

    def deleteAtIndex(self, index: int) -> None:
        cur = self.left.next
        while cur and index > 0:
            cur = cur.next
            index -= 1
        if cur and cur != self.right and index == 0:
            nxt, prv = cur.next, cur.prev
            prv.next = nxt
            nxt.prev = prv
