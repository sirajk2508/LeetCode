class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        int n = nums.size();
        vector<vector<int>> ans;
        sort(nums.begin(), nums.end());
        if(n < 3)
            return {};
        if(nums[0] > 0)
            return {};
        for(int i = 0; i < n; i++) {
            if(nums[i] > 0)
                break;
            if(i > 0 && nums[i] == nums[i-1])
                continue;
            int low = i+1, high = n-1, sum = 0;
            while(low < high) {
                sum = nums[i] + nums[low] + nums[high];
                if(sum > 0)
                    high--;
                else if(sum < 0)
                    low++;
                else {
                    ans.push_back({nums[i], nums[low], nums[high]});
                    int lastl = nums[low], lasth = nums[high];
                    while(low < high && nums[low] == lastl)
                        low++;
                    while(low < high && nums[high] == lasth)
                        high--;
                }
            }
        }
        return ans;
    }
};
