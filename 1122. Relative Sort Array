// Brute Force Solution

class Solution {
public:
    vector<int> relativeSortArray(vector<int>& arr1, vector<int>& arr2) {
        map<int, int> mpp1, mpp2;
        int n = arr1.size(), k = 0;
        for(auto i : arr1)
            mpp1[i]++;
        vector<int> ans(n);
        for(int i = 0; i < arr2.size(); i++) {
            if(mpp1.count(arr2[i])) {
                while(mpp1[arr2[i]] > 0) {
                    ans[k++] = arr2[i];
                    mpp1[arr2[i]]--;
                }
            }
        }
        for(auto& [a, b] : mpp1)
            while(b-- > 0)
                ans[k++] = a;
        return ans;
    }
};



// Clean Code

class Solution {
public:
    vector<int> relativeSortArray(vector<int>& arr1, vector<int>& arr2) {
        map<int, int> mpp;
        int n = arr1.size(), k = 0;
        for(auto i : arr1)
            mpp[i]++;
        vector<int> ans(n);
        for(auto i : arr2)
            while(mpp[i]-- > 0)
                ans[k++] = i;
        for(auto& [a, b] : mpp)
            while(b-- > 0)
                ans[k++] = a;
        return ans;
    }
};
