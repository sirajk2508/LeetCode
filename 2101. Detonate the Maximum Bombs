class Solution {
private:
    #define ll long long int

    void dfs(vector<vector<int>>& adj, vector<bool>& vis, int& cnt, int& i) {
        vis[i] = 1;
        cnt++;
        for(int j = 0; j < adj[i].size(); j++) {
            if(!vis[adj[i][j]])
                dfs(adj, vis, cnt, adj[i][j]);
        }
    }
public:
    int maximumDetonation(vector<vector<int>>& bombs) {
        int n = bombs.size();
        vector<vector<int>> adj(n);
        for(int i = 0; i < n; i++) {
            ll x1, y1, r1;
            x1 = bombs[i][0];
            y1 = bombs[i][1];
            r1 = bombs[i][2];
            for(int j = 0; j < n; j++) {
                if(i != j) {
                    ll x2, y2, r2;
                    x2 = abs(x1-bombs[j][0]);
                    y2 = abs(y1-bombs[j][1]);
                    if(x2 * x2 + y2 * y2 <= r1 * r1)
                        adj[i].push_back(j);
                }
            }
        }
        int ans = INT_MIN;
        for(int i = 0; i < n; i++) {
            int cnt = 0;
            vector<bool> vis(n, 0);
            dfs(adj, vis, cnt, i);
            ans = max(ans, cnt);
        }
        return ans;
    }
};
