class Solution {
public:
    long long maxScore(vector<int>& nums1, vector<int>& nums2, int k) {
        int n = nums1.size();
        vector<pair<int, int>> temp(n);
        for(int i = 0; i < n; i++)
            temp[i] = {nums2[i], nums1[i]};
        sort(rbegin(temp), rend(temp));
        long long sum = 0, ans = 0;
        priority_queue<int, vector<int>, greater<int>> pq;
        for(auto& [e, s] : temp) {
            pq.emplace(s);
            sum += s;
            if(pq.size() > k) {
                sum -= pq.top();
                pq.pop();
            }
            if(pq.size() == k)
                ans = max(ans, sum * e);
        }
        return ans;
    }
};
