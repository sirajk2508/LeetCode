// EXtra Space

class Solution {
public:
    vector<int> shuffle(vector<int>& nums, int n) {
        vector<int> ans;
        for(int i = 0; i < n; i++) {
            ans.push_back(nums[i]);
            ans.push_back(nums[i+n]);
        }
        return ans;
    }
};



// PYTHON3
class Solution:
    def shuffle(self, nums: List[int], n: int) -> List[int]:
        ans = []
        for i in range(n):
            ans.append(nums[i])
            ans.append(nums[i+n])
        return ans




// No Extra Space

class Solution:
    def shuffle(self, nums: List[int], n: int) -> List[int]:
        for i in range(n):
            nums[i] = nums[i] << 10
            nums[i] = nums[i] | nums[i+n] # store x,y
        j = 2*n-1
        for i in range(n-1, -1, -1):
            y = nums[i] & (2**n-1)
            x = nums[i] >> 10
            nums[j] = y
            nums[j-1] = x
            j -= 2
        return nums
