// Brute Force Approach


class Solution {
public:
    bool findSubarrays(vector<int>& nums) {
        int n = nums.size(), count = 0;
        unordered_map<int, int> mpp;
        for(int i = 0; i < n-1; i++) {
            for(int j = i+1; j < n-1; j++)
                if(nums[i]+nums[i+1] == nums[j]+nums[j+1])
                    count++;
        }
        return count >= 1;
    }
};




// Optimal Approach


class Solution {
public:
    bool findSubarrays(vector<int>& nums) {
        int n = nums.size();
        unordered_map<int, int> mpp;
        for(int i = 0; i < n-1; i++) {
            int sum = nums[i] + nums[i+1];
            mpp[sum]++;
            if(mpp[sum] > 1)
                return true;
        }
        return false;
    }
};
