class Solution {
public:
    int findLucky(vector<int>& arr) {
        unordered_map<int, int> mpp;
        for(auto i : arr)
            mpp[i]++;
        int maxi = -1;
        for(auto& [a, b] : mpp)
            if(a == b)
                maxi = max(maxi, a);
        return maxi;
    }
};


// Optimised Solution

class Solution {
public:
    int findLucky(vector<int>& arr) {
        sort(arr.begin(), arr.end(), greater<int>());
        int count = 1;
        for(int i = 1; i < arr.size(); i++) {
            if(arr[i] == arr[i-1])
                count++;
            else {
                if(arr[i-1] == count)
                    return count;
                else count = 1;
            }
        }
        return arr.back() == count ? count : -1;
    }
};
