class Solution {
private:
    int sum(vector<int>& arr, int k) {
        int ans = 0;
        for(int i = 0; i < k-1; i++)
            ans += arr[i];
        return ans;
    }
public:
    int numOfSubarrays(vector<int>& arr, int k, int threshold) {
        int n = arr.size();
        int ans = 0;
        int cursum = sum(arr, k);
        for(int l = 0; l < n-k+1; l++) {
            cursum += arr[l+k-1];
            if((cursum / k) >= threshold)
                ans++;
            cursum -= arr[l];
        }
        return ans;
    }
};


// PYTHON3 Code

class Solution:
    def numOfSubarrays(self, arr: List[int], k: int, threshold: int) -> int:
        n = len(arr)
        ans = 0
        cursum = sum(arr[:k-1])
        for l in range(n-k+1):
            cursum += arr[l+k-1]
            if (cursum / k) >= threshold:
                ans += 1
            cursum -= arr[l]
        return ans
