class Solution {
public:
    int minJumps(vector<int>& arr) {
        int n = arr.size();
        unordered_map<int, vector<int>> mpp;
        for(int i = 0; i < n; i++)
            mpp[arr[i]].push_back(i);
        vector<bool> vis(n);
        vis[0] = true;
        queue<int> q;
        q.push(0);
        int steps = 0;
        while(!q.empty()) {
            for(int sz = q.size(); sz > 0; sz--) {
                int i = q.front();
                q.pop();
                if(i == n-1)
                    return steps;
                vector<int>& next = mpp[arr[i]];
                next.push_back(i-1);
                next.push_back(i+1);
                for(int j : next) {
                    if(j >= 0 && j < n && !vis[j]) {
                        vis[j] = true;
                        q.push(j);
                    }
                }
                next.clear();
            }
            steps++;
        }
        return 0;
    }
};
